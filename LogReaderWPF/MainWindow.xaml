<Fluent:RibbonWindow x:Class="LogReaderWPF.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:Fluent="urn:fluent-ribbon"
                     xmlns:logReaderWpf="clr-namespace:LogReaderWPF"
                     xmlns:logReader="clr-namespace:LogReader"
                     Title="LogReader" 
                     Width="800" 
                     Height="600" Closing="RibbonWindow_Closing" >
    <Window.Resources>
        <logReaderWpf:ConfigToDynamicGridViewConverter x:Key="ConfigToDynamicGridViewConverter" />

        <Style x:Key="myItemStyle" TargetType="{x:Type ListViewItem}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <Binding Path="Background"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
            </Style.Triggers>

            <Setter Property="Background">
                <Setter.Value>
                    <Binding Path="Background"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <Binding Path="Foreground"/>
                </Setter.Value>
            </Setter>
            <Setter Property="FontFamily">
                <Setter.Value>
                    <Binding Path="FontFamily"/>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize">
                <Setter.Value>
                    <Binding Path="FontSize"/>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="Open" Executed="CommandOpen_OnExecuted"></CommandBinding>
        <CommandBinding Command="Close" Executed="CommandClose_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.Search" Executed="Search_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.SearchNext" Executed="SearchNext_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.SearchPrev" Executed="SearchPrev_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.ToggleFilter" Executed="ToggleFilter_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.SetFilter" Executed="SetFilter_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.SetFilterForSearch" Executed="SetFilterForSearch_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.SetFormat" Executed="SetFormat_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.SetParser" Executed="SetParser_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.CloseAll" Executed="CloseAll_OnExecuted"></CommandBinding>
        <CommandBinding Command="logReader:CustomCommands.Exit" Executed="Exit_OnExecuted"></CommandBinding> 
    </Window.CommandBindings>

        <DockPanel >
        <Fluent:Ribbon DockPanel.Dock="Top">
        <!--Backstage-->
        <Fluent:Ribbon.Menu>
            <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="Open" Icon="images/open.png" LargeIcon="images/open.png" Command="Open"/>
                        <Fluent:SeparatorTabItem/>
                        <Fluent:Button Header="Close" Icon="images/close.png" LargeIcon="images/close.png" Command="Close" IsEnabled="{Binding Path=Count}"/>
                        <Fluent:Button Header="Close All" Icon="images/close.png" LargeIcon="images/close.png" Command="logReader:CustomCommands.CloseAll" IsEnabled="{Binding Path=Count}"/>
                        <Fluent:SeparatorTabItem/>
                        <Fluent:Button Header="Exit" Command="logReader:CustomCommands.Exit"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
        </Fluent:Ribbon.Menu>

        <!--Tabs-->
        <Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox Header="Files">
                    <Fluent:Button Header="Open"
                           LargeIcon="images/open.png"
                           Command="Open" />
                    <Fluent:Button Header="Close" 
                           Icon="images/close.png"
                           LargeIcon="images/close.png" Command="Close" IsEnabled="{Binding Path=Count}"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Filters">
                    <Fluent:ToggleButton Header="Toggle"
                           Icon="images/filter.png"
                           LargeIcon="images/filter.png" Name="toggleFilterButton" Command="logReader:CustomCommands.ToggleFilter"/>
                    <Fluent:Button Header="Customize" 
                           Icon="images/editFilter.png"
                           LargeIcon="images/editFilter.png" Command="logReader:CustomCommands.SetFilter" IsEnabled="{Binding Path=Count}" />
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Format">
                    <Fluent:Button Header="Columns"
                           Icon="images/parser.png"
                           LargeIcon="images/parser.png" Command="logReader:CustomCommands.SetParser" IsEnabled="{Binding Path=Count}"/>
                    <Fluent:Button Header="Appearance"
                           Icon="images/palette.png"
                           LargeIcon="images/palette.png" Command="logReader:CustomCommands.SetFormat" IsEnabled="{Binding Path=Count}"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Search">
                    <Fluent:RibbonToolBar>
                        <Fluent:RibbonToolBar.LayoutDefinitions>
                            <Fluent:RibbonToolBarLayoutDefinition Size="Large">
                                <Fluent:RibbonToolBarRow>
                                    <Fluent:RibbonToolBarControlDefinition Target="searchBox" Width="127"/>
                                </Fluent:RibbonToolBarRow>
                                <Fluent:RibbonToolBarRow>
                                    <Fluent:RibbonToolBarControlDefinition Target="searchPrev" />
                                    <Fluent:RibbonToolBarControlDefinition Target="searchNext" />
                                    <Fluent:RibbonToolBarControlDefinition Target="caseSensitive" />
                                    <Fluent:RibbonToolBarControlDefinition Target="searchToFilter" />
                                </Fluent:RibbonToolBarRow>
                            </Fluent:RibbonToolBarLayoutDefinition>
                        </Fluent:RibbonToolBar.LayoutDefinitions>
                        <Fluent:TextBox x:Name="searchBox" IsEnabled="{Binding Path=Count}" KeyDown="searchBox_KeyDown"/>
                        <Fluent:Button x:Name="searchPrev" Header="Green" Icon="images/up.png" LargeIcon="images/up.png" IsEnabled="{Binding Path=Count}"  Command="logReader:CustomCommands.SearchPrev"/>
                        <Fluent:Button x:Name="searchNext" Header="Gray" Icon="images/down.png" LargeIcon="images/down.png" IsEnabled="{Binding Path=Count}" Command="logReader:CustomCommands.SearchNext"/>
                        <Fluent:ToggleButton x:Name="caseSensitive" Header="Gray" Icon="images/searchCase_sm.png" LargeIcon="images/searchCase_sm.png" IsEnabled="{Binding Path=Count}"/>
                        <Fluent:Button x:Name="searchToFilter" Header="Gray" Icon="images/addToFilter_sm.png" LargeIcon="images/addToFilter_sm.png" IsEnabled="{Binding Path=Count}" Command="logReader:CustomCommands.SetFilterForSearch"/>
                    </Fluent:RibbonToolBar>
                    
                    
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
    </Fluent:Ribbon>
        
        
            <TabControl x:Name="logTabControl" ItemsSource="{Binding}" DockPanel.Dock="Top">
                <TabControl.ItemTemplate>
                    <DataTemplate DataType="logReaderWpf:LogTabData">
                    <Border>
                        <Grid>
                            <Grid.InputBindings>
                                <MouseBinding Command="ApplicationCommands.Close" Gesture="MiddleClick" />
                            </Grid.InputBindings>
                            <TextBlock Text="{Binding Header}"/>
                        </Grid>
                    </Border>


                </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate DataType="logReaderWpf:LogTabData">
                    <ListView ItemsSource="{Binding Data}" View="{Binding Context, Converter={StaticResource ConfigToDynamicGridViewConverter}}" ItemContainerStyle="{StaticResource myItemStyle}" SizeChanged="ListView_SizeChanged" Loaded="ListView_Loaded"
                              logReaderWpf:ListBoxBehavior.ScrollOnNewItem="true" SelectionChanged="logListView_SelectionChanged">
                    </ListView>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
    </DockPanel>
</Fluent:RibbonWindow>
